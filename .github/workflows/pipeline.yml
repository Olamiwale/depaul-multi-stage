name: Multi-stage Deploy Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment"
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
      tag:
        description: "Image tag (e.g., dev, staging, v1.0.0)"
        required: true
        default: dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ACR_NAME: depaulacr
      IMAGE_NAME: app

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        

      - name: 'Login to Azure using OIDC'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          auth-type: oidc

          

      - name: Login to ACR
        run: az acr login --name $ACR_NAME

      - name: Build Docker image
        run: |
          docker build -t $ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.event.inputs.tag }} ./backend

      - name: Push Docker image
        run: |
          docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.event.inputs.tag }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: briitz
          cluster-name: briitzCluster

      - name: Deploy to AKS
        run: |
          kubectl apply -f ./k8s/${{ github.event.inputs.environment }}/deployment.yaml

          kubectl apply -f ./k8s/${{ github.event.inputs.environment }}/service.yaml

          kubectl set image deployment/app-deployment app=$ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.event.inputs.tag }}
